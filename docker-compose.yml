version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: devlink-api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
      - "9229:9229"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://devlink:devlink123@postgres:5432/devlink_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - REFRESH_TOKEN_SECRET=dev-refresh-secret-change-in-production
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - FROM_EMAIL=noreply@devlink.local
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - devlink-network
    command: npm run start:debug

  postgres:
    image: postgres:15-alpine
    container_name: devlink-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: devlink_db
      POSTGRES_USER: devlink
      POSTGRES_PASSWORD: devlink123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devlink -d devlink_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - devlink-network

  redis:
    image: redis:7-alpine
    container_name: devlink-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass devlink123
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - devlink-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: devlink-mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - devlink-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: devlink-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@devlink.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - devlink-network
    profiles:
      - tools

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: devlink-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:devlink123
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    depends_on:
      - redis
    networks:
      - devlink-network
    profiles:
      - tools

networks:
  devlink-network:
    driver: bridge
    name: devlink-network

volumes:
  postgres_data:
    name: devlink-postgres-data
  redis_data:
    name: devlink-redis-data
  pgadmin_data:
    name: devlink-pgadmin-data 